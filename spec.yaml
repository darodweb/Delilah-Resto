openapi: 3.0.0
info:
  description: |
    Applicacion REST API de Delilah Resto 
  version: 1.0.0-oas3
  title: Delilah Resto
  contact:
    name: Daniel Rodriguez
    email: darodweb@gmail.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
servers:
  - url: http://localhost:3307
tags:
  - name: login
  - name: usuarios
  - name: pedidos
  - name: productos
  - name: admin
paths:
  /login:
    post:
      description: Operacion para iniciar sesion.
      tags:
      - login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        201:
          description: Usuario creado satisfactoriamente.
  /usuarios:
    get:
      description: Obtiene un listado de usuarios
      tags:
      - usuarios
      responses:
        200:
          description: Resultado satisfactorio
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usuarios'
  /usuario/{id}:
    get:
      description: Obtiene un usuario por ID
      tags:
      - usuarios
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
          format: int64
          minimum: 1
      responses:
        200:
          description: Respuesta satisfactoria.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usuario'
    put:
      description: Operacion para modificar un usuario existente.
      tags:
      - usuarios
      parameters:
      - in: header
        name: token
        required: true
        schema:
          type: integer
          format: int64
          minimum: 1
      - in: path
        name: id
        required: true
        schema:
          type: integer
          format: int64
          minimum: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                nombre:
                  type: string
                correo_electronico:
                  type: string
                telefono:
                  type: string
                direccion:
                  type: string
      responses:
        201:
          description: Usuario modificado satisfactoriamente.
  /usuario:              
    post:
      description: Operacion para crear un nuevo usuario con 'rol = 2'.
      tags:
      - usuarios
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                nombre:
                  type: string
                correo_electronico:
                  type: string
                telefono:
                  type: integer
                direccion:
                  type: string
                telefono:
                  type: string

      responses:
        201:
          description: Usuario creado satisfactoriamente.
  /pedidos:
    get:
      description: Obtiene un listado de pedidos
      parameters:
        - in: header
          name: token
          required: true
          description: Unico para usuarios administradores
          schema:
            type: string
      tags:
      - pedidos
      responses:
        200:
          description: Resultado satisfactorio
        400:
          description: Error al conectarse con la base de datos.
        401:
          description: No tiene permisos para realizar esta consulta.
      produces:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: integer
                description: Id del pedido
              Estado:
                type: string
              Hora:
                type: string
              Numero:
                type: string
              Descripcion:
                type: string
                description: Detalle del pedido
              Total:
                type: integer
              Usuario_id:
                type: string
              Forma de pago:
                type: integer
                descripcion: Codigo de la forma de pago.
              Direccion:
                type: string    
  /pedido/{id}/estado/{estado}:
    put:
      description: Actualiza el estado de un pedido.
      tags:
      - pedidos
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
          format: int64
          minimum: 1
      - in: path
        name: estado
        required: true
        schema:
          type: integer
          format: int64
          minimum: 1
      responses:
        201:
          description: Pedido modificado satisfactoriamente.
  /pedido:
    post:
      description: Crea un nuevo pedido.
      tags:
      - pedidos
      parameters:
        - in: header
          name: token
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                forma_de_pago:
                  example: 1
                  type: integer
                  description: efectivo = 1, tarjeta de debito = 2, tarjeta de credito = 3
                producto:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: integer
                      descripcion:
                        type: string
                        example: Hamburguesa Doble
                      cantidad:
                        type: integer
                direccion:
                  type: string
                  example: "Casa 1 entre calles 1 y 2"
      responses:
        201:
          description: Pedido creado satisfactoriamente.
  /producto/{id}:
    get:
      description: Obtiene el detalle de un producto
      tags:
      - productos
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            minimum: 1
      responses:
        200:
          description: Resultado satisfactorio
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/producto'
    put:
      description: Modifica un producto existente
      tags:
      - productos
      parameters:
        - in: header
          name: token
          required: true
          schema:
            type: integer
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          appication/json:
            schema:
              type: object
              properties:
                foto:
                  type: string
                descripcion:
                  type: string
                precio:
                  type: integer
      responses:
        200:
          description: Producto actualizado satisfactoriamente
    delete:
      description: Elimina un producto por ID
      tags:
      - productos
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
          format: int64
          minimum: 1
      - in: header
        name: token
        required: true
        schema:
          type: integer
          format: int64
          minimum: 1
      responses:
        200:
          description: Producto eliminado satisfactoriamente
  /productos:
    get:
      description: Obtiene un listado de productos
      parameters:
        - in: header
          name: token
          required: true
      tags:
      - productos
      responses:
        200:
          description: Consulta satisfactoria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/productos' 
  /producto:
    post:
      description: Crea un nuevo producto
      parameters:
        - in: header
          name: token
          required: true      
      tags:
      - productos
      requestBody:
        required: true
        content:
          appication/json:
            schema:
              type: object
              properties:
                foto:
                  type: string
                descripcion: 
                  type: string
                precio:
                  type: integer
      responses:
        200:
          description: Producto creado satisfactoriamente
  /pedido/{id}:
    get:
      description: Obtiene un pedido por ID
      tags:
      - pedidos
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
          format: int64
          minimum: 1
      - in: header
        name: token
        required: true
        schema:
          type: integer
          format: int64
          minimum: 1
      responses:
        200:
          description: Respuesta satisfactoria.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pedido'         
  /admin:              
    post:
      description: Operacion para crear un nuevo administrador con 'rol = 1'.
      tags:
      - admin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                nombre:
                  type: string
                correo_electronico:
                  type: string
                telefono:
                  type: string
                direccion:
                  type: string
                password:
                  type: string
      responses:
        201:
          description: Administrador creado satisfactoriamente.            
components:
  schemas:
    usuario:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        nombre:
          type: string
        correo_electronico:
          type: string
        telefono:
          type: string
        rol:
          type: integer
        direccion:
          type: string
        password:
          type: string
    usuarios:
      type: array
      items:
        properties:
          id:
            type: integer
          username:
            type: string
          nombre:
            type: string
          correo_electronico:
            type: string
          telefono:
            type: string
          rol:
            type: integer
          direccion:
            type: string
          password:
            type: string
    pedido:
      type: object
      properties:
        forma_de_pago:
          type: integer
        producto:
          type: array
          items:
            properties:
              id:
                type: integer
              descripcion:
                type: string
              cantidad:
                type: integer
        direccion:
          type: string
    pedidos:
      type: array
      items:
        properties:
          id:
            type: integer
          estado:
            type: string
          hora:
            type: string
          numero:
            type: integer
          descripcion:
            type: string
          total:
            type: integer
          usuario_id:
            type: string
          forma_de_pago:
            type: string
          direccion:
            type: string
    producto:
      type: object
      properties:
        id:
          type: integer
        foto:
          type: string
        descripcion:
          type: string
        precio:
          type: integer
    productos:
      type: array
      items:
        properties:
          id:
            type: integer
          foto:
            type: string
          descripcion:
            type: string
          precio:
            type: integer
